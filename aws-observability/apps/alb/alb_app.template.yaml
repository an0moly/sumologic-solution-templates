AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: "Template to setup the ALB app with AWS and Sumo Logic resources for AWS Observability Solution."

Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: "Sumo Logic Access Configuration (Required)"
        Parameters:
          - Section1aSumoDeployment
          - Section1bSumoAccessID
          - Section1cSumoAccessKey
          - Section1dSumoOrganizationId
          - Section1eRemoveSumoResourcesOnDeleteStack

      - Label:
          default: "Sumo Logic AWS Resources Tagging Configuration (Required)"
        Parameters:
          - Section2aTagExistingAWSResources
          - Section2bAccountAlias
          - Section2cFilterExpression

      - Label:
          default: "App Details - Sumo Logic App Configuration"
        Parameters:
          - Section3aInstallApp

      - Label:
          default: "App Details - CloudWatch Metrics Source Configuration"
        Parameters:
          - Section4aCloudWatchMetricCollectorName
          - Section4bCreateCloudWatchMetricsSource
          - Section4cCloudWatchMetricsSourceName

      - Label:
          default: "App Details - ALB Source Log Source Configuration"
        Parameters:
          - Section5aCreateS3Bucket
          - Section5bS3LogsBucketName
          - Section5cALBCollectorName
          - Section5dCreateALBLogSource
          - Section5eS3BucketPathExpression
          - Section5fALBLogsSourceName
          - Section5gALBLogsSourceCategoryName

      - Label:
          default: "Local Parameters. Do Not Edit the values."
        Parameters:
          - Section6aParentStackName

    ParameterLabels:
      Section1aSumoDeployment:
        default: "Sumo Logic Deployment Name"
      Section1bSumoAccessID:
        default: "Sumo Logic Access ID"
      Section1cSumoAccessKey:
        default: "Sumo Logic Access Key"
      Section1dSumoOrganizationId:
        default: "Sumo Logic Organization Id"
      Section1eRemoveSumoResourcesOnDeleteStack:
        default: "Delete Sumo Logic Resources when stack is deleted"

      Section2aTagExistingAWSResources:
        default: "Tag Existing AWS ALB Resources."
      Section2bAccountAlias:
        default: "Alias for AWS Account Identification"
      Section2cFilterExpression:
        default: "Filter Regular expression"

      Section3aInstallApp:
        default: "Install Sumo Logic App"

      Section4aCloudWatchMetricCollectorName:
        default: "CloudWatch Metrics Source Collector Name"
      Section4bCreateCloudWatchMetricsSource:
        default: "Create Sumo Logic CloudWatch Metrics Source"
      Section4cCloudWatchMetricsSourceName:
        default: "Sumo Logic CloudWatch Metrics Source Name"

      Section5aCreateS3Bucket:
        default: "Create AWS S3 Bucket"
      Section5bS3LogsBucketName:
        default: "AWS S3 Bucket Name"
      Section5cALBCollectorName:
        default: "Sumo Logic ALB Source Collector Name"
      Section5dCreateALBLogSource:
        default: "Create Sumo Logic ALB Logs Source"
      Section5eS3BucketPathExpression:
        default: "Path Expression for the logs"
      Section5fALBLogsSourceName:
        default: "Sumo Logic ALB Logs Source Name"
      Section5gALBLogsSourceCategoryName:
        default: "Sumo Logic ALB Logs Source Category Name"

      Section6aParentStackName:
        default: "If Any, Name of parent Stack"

Parameters:
  Section1aSumoDeployment:
    Type: String
    AllowedValues:
      - nite
      - stag
      - long
    Description: "Enter au, ca, de, eu, jp, us2, in, fed or us1."
  Section1bSumoAccessID:
    Type: String
    Description: "Sumo Logic Access ID. Used for Sumo Logic API calls."
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic Access ID can not be empty."
  Section1cSumoAccessKey:
    Type: String
    Description: "Sumo Logic Access Key. Used for Sumo Logic API calls."
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic Access Key can not be empty."
    NoEcho: true
  Section1dSumoOrganizationId:
    Description: "Appears on the Account Overview page that displays information about your Sumo Logic organization. Used for IAM Role in Sumo Logic AWS Sources."
    Type: String
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic Organization Id can not be empty."
  Section1eRemoveSumoResourcesOnDeleteStack:
    AllowedValues:
      - true
      - false
    Default: true
    Description: "To delete collectors, sources and apps when the stack is deleted, set this parameter to True. Default is True.
                  Deletes the resources created by the stack. Deletion of updated resources will be skipped."
    Type: String

  Section2aTagExistingAWSResources:
    Type: String
    Description: "Yes - Tags the existing AWS ALB resources with key - Value as account - account alias.
                  No - Skip AWS Resources tagging."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  Section2bAccountAlias:
    Type: String
    Description: "Provide an Alias for AWS account for identification in Sumo Logic Explorer View, metrics and logs. Please do not include special characters."
    AllowedPattern: "[a-zA-Z0-9]+"
    ConstraintDescription: "Alias must only contain uppercase, lowercase letters, number and length less than or equal to 30 characters."
    MaxLength: 30
  Section2cFilterExpression:
    Type: String
    Default: ""
    Description: "Provide regular expression for matching aws resources. For eg;- 'InstanceType': 't1.micro.*?'|'name': 'Test.*?']|'stageName': 'prod.*?'|'FunctionName': 'Test.*?'|TableName.*?|'LoadBalancerName': 'Test.*?'|'DBClusterIdentifier': 'Test.*?'|'DBInstanceIdentifier': 'Test.*?'"

  Section3aInstallApp:
    Type: String
    Description: "Yes - Installs the ALB App for the Sumo Logic AWS Observability Solution.
                  No - Skips the installation of this app."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'

  Section4aCloudWatchMetricCollectorName:
    Type: String
    Description: "Provide a CloudWatch Metrics Source Collector Name"
    Default: ""
  Section4bCreateCloudWatchMetricsSource:
    Type: String
    Description: "Yes - Creates a Sumo Logic CloudWatch Metrics Source which collects Metrics for multiple Namespaces from the region selected.
                  No - If you already have a CloudWatch Metrics Source collecting ALB metrics."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  Section4cCloudWatchMetricsSourceName:
    Type: String
    Description: "Provide a Cloud Watch Metrics Source Name"
    Default: ""

  Section5aCreateS3Bucket:
    Type: String
    Description: "Yes - Create a new S3 bucket in AWS S3.
                  No - Use an existing S3 bucket from AWS S3 which has ALB Logs."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  Section5bS3LogsBucketName:
    Type: String
    Description: "Existing Bucket Name - Provide value if the Flag is set to No.
                  New Bucket Name - Provide a unique Bucket Name if the flag is set to Yes."
  Section5cALBCollectorName:
    Type: String
    Description: "Provide a ALB Source Collector Name"
    Default: ""
  Section5dCreateALBLogSource:
    Type: String
    Description: "Choose Yes to create Sumo Logic ALB Log Source with provided bucket Name."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  Section5eS3BucketPathExpression:
    Type: String
    Description: Path expression to match one or more S3 objects. For example, ABC*.log or ABC.log
    Default: "*"
  Section5fALBLogsSourceName:
    Type: String
    Description: "Provide a ALB Logs Source Name"
    Default: ""
  Section5gALBLogsSourceCategoryName:
    Type: String
    Description: "Existing - Change to an existing Source Category from Sumo Logic if ALB Source is not created.\n
                  New - Default will be used if ALB Source is Created"
    Default: AWS/Alb/S3/Logs

  Section6aParentStackName:
    Type: String
    Default: "ParentStackName"
    Description: Parent Stack Name. Do Not Edit the value.

Mappings:
  Region2ELBAccountId:
    us-east-1:
      AccountId: "127311923021"
    us-east-2:
      AccountId: "033677994240"
    us-west-1:
      AccountId: "027434742980"
    us-west-2:
      AccountId: "797873946194"
    af-south-1:
      AccountId: "098369216593"
    ca-central-1:
      AccountId: "985666609251"
    eu-central-1:
      AccountId: "054676820928"
    eu-west-1:
      AccountId: "156460612806"
    eu-west-2:
      AccountId: "652711504416"
    eu-south-1:
      AccountId: "635631232127"
    eu-west-3:
      AccountId: "009996457667"
    eu-north-1:
      AccountId: "897822967062"
    ap-east-1:
      AccountId: "754344448648"
    ap-northeast-1:
      AccountId: "582318560864"
    ap-northeast-2:
      AccountId: "600734575887"
    ap-northeast-3:
      AccountId: "383597477331"
    ap-southeast-1:
      AccountId: "114774131450"
    ap-southeast-2:
      AccountId: "783225319266"
    ap-south-1:
      AccountId: "718504428378"
    me-south-1:
      AccountId: "076674570225"
    sa-east-1:
      AccountId: "507241528517"
    us-gov-west-1:
      AccountId: "048591011584"
    us-gov-east-1:
      AccountId: "190560391635"
    cn-north-1:
      AccountId: "638102146993"
    cn-northwest-1:
      AccountId: "037604701340"

  RegionMap:
    us-east-1:
      bucketname: appdevzipfiles-us-east-1
    us-east-2:
      bucketname: appdevzipfiles-us-east-2
    us-west-1:
      bucketname: appdevzipfiles-us-west-1
    us-west-2:
      bucketname: appdevzipfiles-us-west-2
    ap-south-1:
      bucketname: appdevzipfiles-ap-south-1
    ap-northeast-2:
      bucketname: appdevzipfiles-ap-northeast-2
    ap-southeast-1:
      bucketname: appdevzipfiles-ap-southeast-1
    ap-southeast-2:
      bucketname: appdevzipfiles-ap-southeast-2
    ap-northeast-1:
      bucketname: appdevzipfiles-ap-northeast-1
    ca-central-1:
      bucketname: appdevzipfiles-ca-central-1
    eu-central-1:
      bucketname: appdevzipfiles-eu-central-1
    eu-west-1:
      bucketname: appdevzipfiles-eu-west-1
    eu-west-2:
      bucketname: appdevzipfiles-eu-west-2
    eu-west-3:
      bucketname: appdevzipfiles-eu-west-3
    eu-north-1:
      bucketname: appdevzipfiles-eu-north-1s
    sa-east-1:
      bucketname: appdevzipfiles-sa-east-1
    ap-east-1:
      bucketname: appdevzipfiles-ap-east-1s
    af-south-1:
      bucketname: appdevzipfiles-af-south-1s
    eu-south-1:
      bucketname: appdevzipfiles-eu-south-1
    me-south-1:
      bucketname: appdevzipfiles-me-south-1s

Conditions:
  do_not_use_parent_stack: !Equals [ !Ref Section6aParentStackName, "ParentStackName"]

  tag_existing_aws_resources: !Equals [!Ref Section2aTagExistingAWSResources, 'Yes']
  install_app: !Equals [!Ref Section3aInstallApp, 'Yes']
  install_alb_logs_source: !Equals [!Ref Section5dCreateALBLogSource, 'Yes']
  create_target_s3_bucket: !And
    - !Equals [!Ref Section5aCreateS3Bucket, 'Yes']
    - !Condition create_sns_topic
  install_cloud_watch_metric_source: !Equals [!Ref Section4bCreateCloudWatchMetricsSource, 'Yes']
  update_alb_source: !And
    - !Not [!Condition install_alb_logs_source]
    - !Not [!Equals [!Ref Section5fALBLogsSourceName, '']]
    - !Not [!Equals [!Ref Section5cALBCollectorName, '']]
  install_alb_collector: !Or
    - !Condition install_alb_logs_source
    - !Condition update_alb_source

  create_sns_topic: !And
    - !Condition do_not_use_parent_stack
    - !Condition install_alb_logs_source

Resources:
  SumoLogicHelperRole:
    Type: AWS::IAM::Role
    Condition: do_not_use_parent_stack
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: AwsObservabilityLambdaExecutePolicies
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - tag:TagResources
                  - tag:UntagResources
                  - elasticloadbalancing:DescribeLoadBalancerAttributes
                  - elasticloadbalancing:DescribeLoadBalancers
                  - elasticloadbalancing:AddTags
                  - elasticloadbalancing:RemoveTags
                  - elasticloadbalancing:ModifyLoadBalancerAttributes
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - s3:GetBucketPolicy
                  - s3:PutBucketPolicy
                Resource: '*'

  SumoLogicHelperFunction:
    Type: 'AWS::Serverless::Function'
    Condition: do_not_use_parent_stack
    Properties:
      FunctionName: !Join
        - ""
        - - !Sub "sumo-lambda-${Section2bAccountAlias}-"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split ["/", !Ref "AWS::StackId"]
      Handler: main.handler
      Runtime: python3.7
      CodeUri:
        Bucket: !FindInMap [RegionMap, !Ref 'AWS::Region', bucketname]
        Key: "sumologic-aws-observability-pre-prod/apps/SumoLogicAWSObservabilityHelper/SumoLogicAWSObservabilityHelper.zip"
      MemorySize: 128
      Timeout: 900
      Role:
        Fn::GetAtt:
          - SumoLogicHelperRole
          - Arn

  SumoRole:
    Type: AWS::IAM::Role
    Condition: do_not_use_parent_stack
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: arn:aws:iam::246946804217:root
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: !Sub "${Section1aSumoDeployment}:${Section1dSumoOrganizationId}"
      Path: "/"
      Policies:
        - PolicyName: SumoLogicAwsSourcesPolicies
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:ListBucketVersions
                  - s3:ListBucket
                  - tag:GetResources
                  - cloudwatch:ListMetrics
                  - cloudwatch:GetMetricStatistics
                Resource:
                  "*"

  TagAWSResources:
    Type: Custom::TagAWSResources
    Condition: tag_existing_aws_resources
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${Section6aParentStackName}-SumoLogicHelperFunctionARN'
      RemoveOnDeleteStack: !Ref Section1eRemoveSumoResourcesOnDeleteStack
      Region: !Ref "AWS::Region"
      AWSResource: elbv2
      Tags:
        account: !Ref Section2bAccountAlias
      AccountID: !Ref "AWS::AccountId"
      Filter: !Ref Section2cFilterExpression

  CreateSumoLogicAWSExplorerView:
    Type: Custom::SumoLogicAWSExplorer
    Condition: do_not_use_parent_stack
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${Section6aParentStackName}-SumoLogicHelperFunctionARN'
      RemoveOnDeleteStack: false
      ExplorerName: "AWS Observability"
      MetadataKeys:
        - "account"
        - "region"
        - "namespace"
        - "entity"
      SumoAccessID: !Ref Section1bSumoAccessID
      SumoAccessKey: !Ref Section1cSumoAccessKey
      SumoDeployment: !Ref Section1aSumoDeployment

  ALBMetricRule:
    Type: Custom::SumoLogicMetricRules
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${Section6aParentStackName}-SumoLogicHelperFunctionARN'
      RemoveOnDeleteStack: false
      MetricRuleName: "AwsObservabilityALBMetricsEntityRule"
      MatchExpression: "Namespace=AWS/ApplicationELB LoadBalancer=*"
      ExtractVariables:
        entity: "$LoadBalancer._1"
      SumoAccessID: !Ref Section1bSumoAccessID
      SumoAccessKey: !Ref Section1cSumoAccessKey
      SumoDeployment: !Ref Section1aSumoDeployment

  SumoCloudwatchMetricsCollector:
    Type: Custom::Collector
    Condition: install_cloud_watch_metric_source
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${Section6aParentStackName}-SumoLogicHelperFunctionARN'
      Region: !Ref "AWS::Region"
      CollectorType: Hosted
      RemoveOnDeleteStack: !If [do_not_use_parent_stack, !Ref Section1eRemoveSumoResourcesOnDeleteStack, false]
      CollectorName: !Ref Section4aCloudWatchMetricCollectorName
      SumoAccessID: !Ref Section1bSumoAccessID
      SumoAccessKey: !Ref Section1cSumoAccessKey
      SumoDeployment: !Ref Section1aSumoDeployment

  SumoCloudwatchMetricsSource:
    Condition: install_cloud_watch_metric_source
    Type: Custom::AWSSource
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${Section6aParentStackName}-SumoLogicHelperFunctionARN'
      Region: !Ref "AWS::Region"
      RemoveOnDeleteStack: !Ref Section1eRemoveSumoResourcesOnDeleteStack
      SourceType: AwsCloudWatch
      Namespaces:
        - 'AWS/ApplicationELB'
      SourceName: !Ref Section4cCloudWatchMetricsSourceName
      CollectorId: !If
        - install_cloud_watch_metric_source
        - !GetAtt
          - SumoCloudwatchMetricsCollector
          - COLLECTOR_ID
        - !ImportValue
          'Fn::Sub': '${Section6aParentStackName}-CollectorID'
      SumoAccessID: !Ref Section1bSumoAccessID
      SumoAccessKey: !Ref Section1cSumoAccessKey
      SumoDeployment: !Ref Section1aSumoDeployment
      RoleArn: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoRole
          - Arn
        - !ImportValue
          'Fn::Sub': '${Section6aParentStackName}-SumoSourceRoleARN'

  sumoApp:
    Condition: install_app
    Type: Custom::App
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${Section6aParentStackName}-SumoLogicHelperFunctionARN'
      Region: !Ref "AWS::Region"
      AppName: "AWS Observability Alb App"
      RemoveOnDeleteStack: !Ref Section1eRemoveSumoResourcesOnDeleteStack
      AppSources:
        logsrc: !Sub "_sourceCategory=${Section5gALBLogsSourceCategoryName}"
      SumoAccessID: !Ref Section1bSumoAccessID
      SumoAccessKey: !Ref Section1cSumoAccessKey
      SumoDeployment: !Ref Section1aSumoDeployment

  TargetS3Bucket:
    Condition: create_target_s3_bucket
    Type: AWS::S3::Bucket
    DependsOn:
      - SumoSNSpolicy
    Properties:
      BucketName: !Ref Section5bS3LogsBucketName
      NotificationConfiguration:
        TopicConfigurations:
          - Event: s3:ObjectCreated:Put
            Topic: !Ref SumoSNSTopic

  SumoS3BucketPolicy:
    Condition: create_target_s3_bucket
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref Section5bS3LogsBucketName
      PolicyDocument:
        Statement:
          - Sid: AWSAlbLogsPutObjects
            Effect: Allow
            Principal:
              AWS: !Join
                - ""
                - - "arn:aws:iam::"
                  - !FindInMap [Region2ELBAccountId, !Ref 'AWS::Region', AccountId]
                  - ":root"
            Action: s3:PutObject
            Resource:
              - !Sub "arn:aws:s3:::${Section5bS3LogsBucketName}/*"
    DependsOn:
      - TargetS3Bucket

  SumoSNSTopic:
    Condition: create_sns_topic
    Type: "AWS::SNS::Topic"
    Properties:
      TopicName: !Join
        - ""
        - - !Sub "sumo-sns-topic-${Section2bAccountAlias}-"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split ["/", !Ref "AWS::StackId"]

  SumoSNSSubscription:
    Condition: install_alb_logs_source
    Type: "AWS::SNS::Subscription"
    Properties:
      TopicArn: !If
        - create_sns_topic
        - !Ref SumoSNSTopic
        - !ImportValue
          'Fn::Sub': '${Section6aParentStackName}-SNSTopicArn'
      Endpoint: !GetAtt SumoALBSource.SUMO_ENDPOINT
      Protocol: https
      DeliveryPolicy:
        healthyRetryPolicy:
          numRetries: 40
          minDelayTarget: 10
          maxDelayTarget: 300
          numMinDelayRetries: 3
          numMaxDelayRetries: 5
          numNoDelayRetries: 0
          backoffFunction: exponential

  SumoSNSpolicy:
    Condition: create_sns_topic
    Type: "AWS::SNS::TopicPolicy"
    Properties:
      PolicyDocument:
        Id: SumoTopicPolicy
        Statement:
          - Action:
              - sns:Publish
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref "AWS::AccountId"
              ArnLike:
                aws:SourceArn: !Sub "arn:aws:s3:::${Section5bS3LogsBucketName}"
            Effect: Allow
            Principal:
              "Service": "s3.amazonaws.com"
            Resource:
              - !Ref SumoSNSTopic
      Topics:
        - Ref: SumoSNSTopic

  WaitHandle:
    Type: "AWS::CloudFormation::WaitConditionHandle"

  TargetS3BucketWaitHandle:
    Condition: create_target_s3_bucket
    DependsOn: TargetS3Bucket
    Type: "AWS::CloudFormation::WaitConditionHandle"

  TargetS3BucketWaitCondition:
    Type: "AWS::CloudFormation::WaitCondition"
    Properties:
      Handle: !If [create_target_s3_bucket, !Ref TargetS3BucketWaitHandle, !Ref WaitHandle]
      Timeout: "1"
      Count: 0

  SumoALBCollector:
    Type: Custom::Collector
    Condition: install_alb_collector
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${Section6aParentStackName}-SumoLogicHelperFunctionARN'
      Region: !Ref "AWS::Region"
      CollectorType: Hosted
      RemoveOnDeleteStack: !If [do_not_use_parent_stack, !Ref Section1eRemoveSumoResourcesOnDeleteStack, false]
      CollectorName: !Ref Section5cALBCollectorName
      SumoAccessID: !Ref Section1bSumoAccessID
      SumoAccessKey: !Ref Section1cSumoAccessKey
      SumoDeployment: !Ref Section1aSumoDeployment

  SumoALBSource:
    Condition: install_alb_logs_source
    DependsOn: TargetS3BucketWaitCondition
    Type: Custom::AWSSource
    Properties:
      SourceType: AwsElbBucket
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${Section6aParentStackName}-SumoLogicHelperFunctionARN'
      Region: !Ref "AWS::Region"
      SourceName: !Ref Section5fALBLogsSourceName
      RemoveOnDeleteStack: !Ref Section1eRemoveSumoResourcesOnDeleteStack
      SourceCategory: !Ref Section5gALBLogsSourceCategoryName
      CollectorId: !GetAtt SumoALBCollector.COLLECTOR_ID
      SumoAccessID: !Ref Section1bSumoAccessID
      SumoAccessKey: !Ref Section1cSumoAccessKey
      SumoDeployment: !Ref Section1aSumoDeployment
      TargetBucketName: !Ref Section5bS3LogsBucketName
      PathExpression: !Ref Section5eS3BucketPathExpression
      Fields:
        account: !Ref Section2bAccountAlias
        namespace: "aws/applicationelb"
        region: !Ref "AWS::Region"
      RoleArn: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoRole
          - Arn
        - !ImportValue
          'Fn::Sub': '${Section6aParentStackName}-SumoSourceRoleARN'

  SumoALBUpdateSource:
    Type: Custom::SumoLogicUpdateFields
    Condition: update_alb_source
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          'Fn::Sub': '${Section6aParentStackName}-SumoLogicHelperFunctionARN'
      Region: !Ref "AWS::Region"
      SourceName: !Ref Section5fALBLogsSourceName
      RemoveOnDeleteStack: !Ref Section1eRemoveSumoResourcesOnDeleteStack
      CollectorId: !GetAtt SumoALBCollector.COLLECTOR_ID
      SumoAccessID: !Ref Section1bSumoAccessID
      SumoAccessKey: !Ref Section1cSumoAccessKey
      SumoDeployment: !Ref Section1aSumoDeployment
      Fields:
        account: !Ref Section2bAccountAlias
        namespace: "AWS/ApplicationELB"
        region: !Ref "AWS::Region"