AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: "Template to setup the AWS Observability Solution with all AWS, Lambda and Sumo Logic Resources installation."

Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: "1. Sumo Logic Access Configuration (Required)"
        Parameters:
          - Section1aSumoLogicDeployment
          - Section1bSumoLogicAccessID
          - Section1cSumoLogicAccessKey
          - Section1dSumoLogicOrganizationId
          - Section1eSumoLogicResourceRemoveOnDeleteStack

      - Label:
          default: "2. AWS Resources Tags Configuration (Required)"
        Parameters:
          - Section2aTagAWSResourcesOptions
          - Section2bAWSResourcesList
          - Section2cAccountAlias
          - Section2dTagAWSResourcesFilterExpression

      - Label:
          default: "3. Sumo Logic AWS Observability Apps Configurations"
        Parameters:
          - Section3aEC2InstallApp
          - Section3bALBInstallApp
          - Section3cDynamoDBInstallApp
          - Section3dRDSInstallApp
          - Section3eLambdaInstallApp
          - Section3fAPIGatewayInstallApp
          - Section3gAnomalyInstallApp

      - Label:
          default: "4. Sumo Logic AWS EC2 Meta Data Source details"
        Parameters:
          - Section4aEC2CreateMetaDataSource

      - Label:
          default: "5. Sumo Logic AWS CloudWatch Metrics and Inventory Source Details"
        Parameters:
          - Section5aCreateCloudWatchMetricsSource
          - Section5bCloudWatchMetricsNameSpaces
          - Section5cCreateAnomalyInventorySource
          - Section5dAnomalyInventoryNameSpaces

      - Label:
          default: "6. Sumo Logic AWS ALB Log Source Details"
        Parameters:
          - Section6aALBCreateS3Bucket
          - Section6bALBS3LogsBucketName
          - Section6cALBS3BucketPathExpression
          - Section6dALBCreateLogSource
          - Section6eALBS3LogsCollectorName
          - Section6fALBLogsSourceName
          - Section6gALBLogsSourceCategoryName

      - Label:
          default: "7. Sumo Logic AWS CloudTrail Source details"
        Parameters:
          - Section7aCreateCloudTrailBucket
          - Section7bCloudTrailLogsBucketName
          - Section7cCloudTrailBucketPathExpression
          - Section7dCreateCloudTrailLogSource
          - Section7eCloudTrailCollectorName
          - Section7fCloudTrailLogsSourceName
          - Section7gCloudTrailLogsSourceCategoryName

      - Label:
          default: "8. Sumo Logic AWS Lambda CloudWatch Logs details"
        Parameters:
          - Section8aLambdaCreateCloudWatchLogsSource
          - Section8bLambdaCloudWatchLogsCollectorName
          - Section8cLambdaCloudWatchLogsSourceName
          - Section8dLambdaCloudWatchLogsSourceCategoryName

      - Label:
          default: "9. Auto Enable Options"
        Parameters:
          - Section9aAutoEnableS3LogsALBResourcesOptions
          - Section9bAutoEnableS3LogsFilterExpression
          - Section9cAutoSubscribeLogGroupsLambdaOptions
          - Section9dAutoSubscribeLambdaLogGroupPattern

    ParameterLabels:
      Section1aSumoLogicDeployment:
        default: "Sumo Logic Deployment Name"
      Section1bSumoLogicAccessID:
        default: "Sumo Logic Access ID"
      Section1cSumoLogicAccessKey:
        default: "Sumo Logic Access Key"
      Section1dSumoLogicOrganizationId:
        default: "Sumo Logic Organization Id"
      Section1eSumoLogicResourceRemoveOnDeleteStack:
        default: "Delete Sumo Logic Resources when stack is deleted"

      Section2aTagAWSResourcesOptions:
        default: "Auto Enable Tagging of AWS Resources Options"
      Section2bAWSResourcesList:
        default: "Choose AWS Resources to Tag"
      Section2cAccountAlias:
        default: "Alias for AWS Account Identification"
      Section2dTagAWSResourcesFilterExpression:
        default: "Regular expression to Filter AWS Resources"

      Section3aEC2InstallApp:
        default: "Install EC2 Metrics App"
      Section3bALBInstallApp:
        default: "Install ALB App"
      Section3cDynamoDBInstallApp:
        default: "Install Dynamo DB App"
      Section3dRDSInstallApp:
        default: "Install RDS App"
      Section3eLambdaInstallApp:
        default: "Install Lambda App"
      Section3fAPIGatewayInstallApp:
        default: "Install API Gateway App"
      Section3gAnomalyInstallApp:
        default: "Install Anomaly App "

      Section4aEC2CreateMetaDataSource:
        default: "Create Sumo Logic AWS EC2 MetaData Source"

      Section5aCreateCloudWatchMetricsSource:
        default: "Create Sumo Logic CloudWatch Metrics Source"
      Section5bCloudWatchMetricsNameSpaces:
        default: "Sumo Logic AWS CloudWatch Metrics Namespaces"
      Section5cCreateAnomalyInventorySource:
        default: "Create Sumo Logic Anomaly Inventory Source"
      Section5dAnomalyInventoryNameSpaces:
        default: "Sumo Logic AWS Anomaly Inventory Namespaces"

      Section6aALBCreateS3Bucket:
        default: "Create AWS S3 Bucket for Logs"
      Section6bALBS3LogsBucketName:
        default: "AWS S3 Bucket Name"
      Section6cALBS3BucketPathExpression:
        default: "Path Expression for the ALB logs"
      Section6dALBCreateLogSource:
        default: "Create Sumo Logic ALB Logs Source"
      Section6eALBS3LogsCollectorName:
        default: "Sumo Logic ALB Logs Collector Name"
      Section6fALBLogsSourceName:
        default: "Sumo Logic ALB Logs Source Name"
      Section6gALBLogsSourceCategoryName:
        default: "Sumo Logic ALB App Logs Source Category Name"

      Section7aCreateCloudTrailBucket:
        default: "Create AWS S3 Bucket for CloudTrail Logs"
      Section7bCloudTrailLogsBucketName:
        default: "AWS S3 Bucket Name"
      Section7cCloudTrailBucketPathExpression:
        default: "Path Expression for the CloudTrail logs"
      Section7dCreateCloudTrailLogSource:
        default: "Create Sumo Logic CloudTrail Logs Source"
      Section7eCloudTrailCollectorName:
        default: "Sumo Logic CloudTrail Logs Collector Name"
      Section7fCloudTrailLogsSourceName:
        default: "Sumo Logic CloudTrail Logs Source Name"
      Section7gCloudTrailLogsSourceCategoryName:
        default: "Sumo Logic CloudTrail Logs Source Category Name"

      Section8aLambdaCreateCloudWatchLogsSource:
        default: "Create Sumo Logic CloudWatch Logs Source"
      Section8bLambdaCloudWatchLogsCollectorName:
        default: "Sumo Logic Lambda CloudWatch Logs Collector Name"
      Section8cLambdaCloudWatchLogsSourceName:
        default: "Sumo Logic Lambda CloudWatch Logs Source Name"
      Section8dLambdaCloudWatchLogsSourceCategoryName:
        default: "Sumo Logic Lambda App CloudWatch Logs Source Category Name"

      Section9aAutoEnableS3LogsALBResourcesOptions:
        default: "Auto Enable S3 Logging of existing and new ALB Resources"
      Section9bAutoEnableS3LogsFilterExpression:
        default: "Regular expression to Filter AWS ALB Resources"
      Section9cAutoSubscribeLogGroupsLambdaOptions:
        default: "Auto Subscribe new log groups to Lambda"
      Section9dAutoSubscribeLambdaLogGroupPattern:
        default: "Regex for lambda"

Parameters:
  Section1aSumoLogicDeployment:
    Type: String
    AllowedValues:
      - nite
      - stag
      - long
    Description: "Enter au, ca, de, eu, jp, us2, in, fed or us1."
  Section1bSumoLogicAccessID:
    Type: String
    Description: "Sumo Logic Access ID. Used for Sumo Logic API calls."
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic Access ID can not be empty."
  Section1cSumoLogicAccessKey:
    Type: String
    Description: "Sumo Logic Access Key. Used for Sumo Logic API calls."
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic Access Key can not be empty."
    NoEcho: true
  Section1dSumoLogicOrganizationId:
    Description: "Appears on the Account Overview page that displays information about your Sumo Logic organization. Used for IAM Role in Sumo Logic AWS Sources."
    Type: String
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic Organization Id can not be empty."
  Section1eSumoLogicResourceRemoveOnDeleteStack:
    AllowedValues:
      - true
      - false
    Default: true
    Description: "To delete collectors, sources and apps when the stack is deleted, set this parameter to True. Default is True.
                  Deletes the resources created by the stack. Deletion of updated resources will be skipped."
    Type: String

  Section2aTagAWSResourcesOptions:
    Type: String
    Description: "New - Tags the new AWS Resources after creation. For New AWS Resources, Lambda function is invoked on CloudWatch Events.
                  Existing - Tags the AWS Resources with account - account alias tag.
                  Both - Tags New and Existing Resources.
                  None - Skip The AWS Resource Tagging."
    Default: 'Both'
    AllowedValues:
      - 'New'
      - 'Existing'
      - 'Both'
      - 'None'
  Section2bAWSResourcesList:
    Default: "ec2, alb, dynamodb, apigateway, rds, lambda"
    Description: "Provide Comma delimited list of the AWS Resource types to tag. Take input values from [ec2, alb, dynamodb, apigateway, rds, lambda]"
    Type: String
  Section2cAccountAlias:
    Type: String
    Description: "Provide an Alias for AWS account for identification in Sumo Logic Explorer View, metrics and logs. Please do not include special characters."
    AllowedPattern: "[a-zA-Z0-9]+"
    ConstraintDescription: "Alias must only contain uppercase, lowercase letters, number and length less than or equal to 30 characters."
    MaxLength: 30
  Section2dTagAWSResourcesFilterExpression:
    Type: String
    Default: ".*"
    Description: "Provide regular expression for matching aws resources. For eg;- 'InstanceType': 't1.micro.*?'|'name': 'Test.*?']|'stageName': 'prod.*?'|'FunctionName': 'Test.*?'|TableName.*?|'LoadBalancerName': 'Test.*?'|'DBClusterIdentifier': 'Test.*?'|'DBInstanceIdentifier': 'Test.*?'"

  Section3aEC2InstallApp:
    Type: String
    Default: 'Yes'
    Description: "Yes - Installs the EC2 App for the Sumo Logic AWS Observability Solution.
                  No - Skips the installation of this app."
    AllowedValues:
      - 'Yes'
      - 'No'
  Section3bALBInstallApp:
    Type: String
    Default: 'Yes'
    Description: "Yes - Installs the ALB App for the Sumo Logic AWS Observability Solution.
                  No - Skips the installation of this app."
    AllowedValues:
      - 'Yes'
      - 'No'
  Section3cDynamoDBInstallApp:
    Type: String
    Default: 'Yes'
    Description: "Yes - Installs the DynamoDB App for the Sumo Logic AWS Observability Solution.
                  No - Skips the installation of this app."
    AllowedValues:
      - 'Yes'
      - 'No'
  Section3dRDSInstallApp:
    Type: String
    Default: 'Yes'
    Description: "Yes - Installs the RDS App for the Sumo Logic AWS Observability Solution.
                  No - Skips the installation of this app."
    AllowedValues:
      - 'Yes'
      - 'No'
  Section3eLambdaInstallApp:
    Type: String
    Default: 'Yes'
    Description: "Yes - Installs the Lambda App for the Sumo Logic AWS Observability Solution.
                  No - Skips the installation of this app."
    AllowedValues:
      - 'Yes'
      - 'No'
  Section3fAPIGatewayInstallApp:
    Type: String
    Default: 'Yes'
    Description: "Yes - Installs the API Gateway App in Sumo Logic AWS Observability Solution.
                  No - Skips the installation of this app."
    AllowedValues:
      - 'Yes'
      - 'No'
  Section3gAnomalyInstallApp:
    Type: String
    Default: 'Yes'
    Description: "Yes - Installs the Anomaly Dashboards in Sumo Logic AWS Observability Solution.
                  No - Skips the installation of this dashboards."
    AllowedValues:
      - 'Yes'
      - 'No'

  Section4aEC2CreateMetaDataSource:
    Type: String
    Description: "Yes - Creates Sumo Logic MetaData Source. A common metadata source will be created with the region selected.
                  No - If you already have a MetaData Source configured."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'

  Section5aCreateCloudWatchMetricsSource:
    Type: String
    Description: "Yes - Creates a Sumo Logic CloudWatch Metrics Source which collects Metrics for multiple Namespaces from the region selected. Default Name - AccountAlias-aws-observability-cloudwatch-metrics-Region.
                  No - If you already have a CloudWatch Metrics Source collecting metrics."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  Section5bCloudWatchMetricsNameSpaces:
    Default: "AWS/ApplicationELB, AWS/ApiGateway, AWS/DynamoDB, AWS/Lambda, AWS/RDS, AWS/EBS, AWS/ECS, AWS/Elasticache, AWS/ELB, AWS/NetworkELB, AWS/Redshift, AWS/Kinesis, AWS/Kinesis"
    Description: "Provide Comma delimited list of the namespaces to collect. Default will be AWS/ApplicationELB, AWS/ApiGateway, AWS/DynamoDB, AWS/Lambda, AWS/RDS, AWS/EBS, AWS/ECS, AWS/Elasticache, AWS/ELB, AWS/NetworkELB, AWS/Redshift, AWS/Kinesis, AWS/Kinesis."
    Type: String
  Section5cCreateAnomalyInventorySource:
    Type: String
    Description: "Yes - Creates a Sumo Logic Inventory Source which collects data for multiple Namespaces from the region selected. Default Name - AccountAlias-aws-observability-inventory-Region.
                  No - If you already have a Inventory Source collecting data."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  Section5dAnomalyInventoryNameSpaces:
    Default: "AWS/ApplicationELB, AWS/ApiGateway, AWS/DynamoDB, AWS/Lambda, AWS/RDS, AWS/EBS, AWS/ECS, AWS/Elasticache, AWS/ELB, AWS/NetworkELB, AWS/Redshift, AWS/Kinesis, AWS/Kinesis"
    Description: "Provide Comma delimited list of the namespaces to collect. Default will be AWS/ApplicationELB, AWS/ApiGateway, AWS/DynamoDB, AWS/Lambda, AWS/RDS, AWS/EBS, AWS/ECS, AWS/Elasticache, AWS/ELB, AWS/NetworkELB, AWS/Redshift, AWS/Kinesis, AWS/Kinesis."
    Type: String

  Section6aALBCreateS3Bucket:
    Type: String
    Description: "Yes - Creates a new Common S3 bucket for all Logs in AWS S3. Default Name - aws-observability-logs-Region-AccountId.
                  No - Uses an existing S3 bucket from AWS S3 which has ALB Logs."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  Section6bALBS3LogsBucketName:
    Type: String
    Description: "Required when Flag = No. Provide an existing bucket name that has ALB logs."
    Default: ""
  Section6cALBS3BucketPathExpression:
    Type: String
    Description: "Path expression to match one or more S3 objects. For example, AWSLogs/*/ALB/us-east-1/*"
    Default: "*"
  Section6dALBCreateLogSource:
    Type: String
    Description: "Yes - Creates a Sumo Logic ALB Log Source that collects ALB logs from an existing bucket or a new bucket. Default Name - AccountAlias-aws-observability-alb-Region-AccountId.
                  No - If you already have an ALB source collecting ALB logs into Sumo Logic."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  Section6eALBS3LogsCollectorName:
    Type: String
    Description: "Required when Flag = No. Provide the existing Sumo Logic collector name for the ALB app."
    Default: ""
  Section6fALBLogsSourceName:
    Type: String
    Description: "Required when Flag = No. Provide the existing Sumo Logic source name for the ALB app. Account, region and namespace Fields will be added to the Source."
    Default: ""
  Section6gALBLogsSourceCategoryName:
    Type: String
    Description: "Required when Flag = No. Provide the existing Sumo Logic source category name for the ALB app. Used for the ALB app installation."
    Default: ""

  Section7aCreateCloudTrailBucket:
    Type: String
    Description: "Yes - Creates a new Common S3 bucket for all logs in AWS S3. Default Name - aws-observability-logs-Region-AccountId.
                  No - Uses an existing S3 bucket from AWS S3 which has CloudTrail Logs."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  Section7bCloudTrailLogsBucketName:
    Type: String
    Description: "Required when Flag = No. Provide an Existing bucket name that has CloudTrail logs."
    Default: ""
  Section7cCloudTrailBucketPathExpression:
    Type: String
    Description: "Path expression to match one or more S3 objects. For example, AWSLogs/*/cloudtrail/us-east-1/*"
    Default: "*"
  Section7dCreateCloudTrailLogSource:
    Type: String
    Description: "Yes - Creates a Sumo Logic CloudTrail Log Source that collects CloudTrail logs from an existing bucket or a new bucket. Default Name - AccountAlias-aws-observability-cloudtrail-Region.
                  No - If you already have a CloudTrail Log source collecting CloudTrail logs into Sumo Logic."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  Section7eCloudTrailCollectorName:
    Type: String
    Description: "Required when Flag = No. Provide the existing Sumo Logic collector name."
    Default: ""
  Section7fCloudTrailLogsSourceName:
    Type: String
    Description: "Required when Flag = No. Provide the existing Sumo Logic source name. Account field will be added."
    Default: ""
  Section7gCloudTrailLogsSourceCategoryName:
    Type: String
    Description: "Required when Flag = No. Provide the existing Sumo Logic source category name for the DynamoDB app. Used for the app installation."
    Default: ""

  Section8aLambdaCreateCloudWatchLogsSource:
    Type: String
    Description: "Yes - Creates the Sumo Logic CloudWatch Log Source that collects Lambda logs from AWS. Default Name - AccountAlias-aws-observability-cloudwatch-logs-Region.
                  No - If you already have a CloudWatch Log source collecting Lambda logs into Sumo Logic."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  Section8bLambdaCloudWatchLogsCollectorName:
    Type: String
    Description: "Required when Flag = No. Provide the existing Sumo Logic collector name used for CloudWatch logs in the Lambda app."
    Default: ""
  Section8cLambdaCloudWatchLogsSourceName:
    Type: String
    Description: "Required when Flag = No. Provide the existing Sumo Logic source name used for CloudWatch logs in the Lambda app. Account, region and namespace fields will be added."
    Default: ""
  Section8dLambdaCloudWatchLogsSourceCategoryName:
    Type: String
    Description: "Required when Flag = No. Provide the existing Sumo Logic source category name used for CloudWatch logs in the Lambda app. Used for the app installation."
    Default: ""

  Section9aAutoEnableS3LogsALBResourcesOptions:
    Type: String
    Description: "New - Automatically enables S3 logging for newly created ALB resources to collect logs for ALB resources. This does not affect ALB resources already collecting logs.
                  Existing - Automatically enables S3 logging for existing ALB resources to collect logs for ALB resources.
                  Both - Automatically enables S3 logging for new and existing ALB resources.
                  None - Skips Automatic S3 Logging enable for ALB resources."
    Default: 'Both'
    AllowedValues:
      - 'New'
      - 'Existing'
      - 'Both'
      - 'None'
  Section9bAutoEnableS3LogsFilterExpression:
    Type: String
    Default: ".*"
    Description: "Provide a regular expression for matching AWS resources. For example- 'InstanceType': 't1.micro.*?'|'name': 'Test.*?']|'stageName': 'prod.*?'|'FunctionName': 'Test.*?'|TableName.*?|'LoadBalancerName': 'Test.*?'|'DBClusterIdentifier': 'Test.*?'|'DBInstanceIdentifier': 'Test.*?'"
  Section9cAutoSubscribeLogGroupsLambdaOptions:
    Type: String
    Description: "New - Automatically subscribes new log groups to lambda to send logs to Sumo Logic.
                  Existing - Automatically subscribes existing log groups to lambda to send logs to Sumo Logic.
                  Both - Automatically subscribes new and existing log groups.
                  None - Skips Automatic subscription."
    Default: 'Both'
    AllowedValues:
      - 'New'
      - 'Existing'
      - 'Both'
      - 'None'
  Section9dAutoSubscribeLambdaLogGroupPattern:
    Type: String
    Default: "lambda"
    Description: "Enter regex for matching logGroups. Regex will check for the name."

Conditions:
  # Condition for Tagging Resources
  tag_existing_aws_resources: !Or
    - !Equals [ !Ref Section2aTagAWSResourcesOptions, 'Existing' ]
    - !Equals [ !Ref Section2aTagAWSResourcesOptions, 'Both' ]
  tag_new_aws_resources: !Or
    - !Equals [ !Ref Section2aTagAWSResourcesOptions, 'New' ]
    - !Equals [ !Ref Section2aTagAWSResourcesOptions, 'Both' ]

  # Condition for EC2 Meta Data Source
  install_ec2_metadata_source: !Equals [ !Ref Section4aEC2CreateMetaDataSource, 'Yes' ]

  # Condition for ALB Log Source
  create_alb_bucket: !Equals [ !Ref Section6aALBCreateS3Bucket, 'Yes' ]
  install_alb_s3_log_source: !Equals [ !Ref Section6dALBCreateLogSource, 'Yes' ]

  # Condition for CloudWatch Metrics Source
  install_cloudwatch_metrics_source: !Equals [ !Ref Section5aCreateCloudWatchMetricsSource, 'Yes' ]
  install_inventory_source: !Equals [ !Ref Section5cCreateAnomalyInventorySource, 'Yes' ]
  install_anomaly_detection: !Or
    - !Equals [ !Ref Section3gAnomalyInstallApp, 'Yes' ]
    - !Condition install_inventory_source

  # Condition for CloudTrail Log Source
  create_cloudtrail_bucket: !Equals [ !Ref Section7aCreateCloudTrailBucket, 'Yes' ]
  install_cloudtrail_log_source: !Equals [ !Ref Section7dCreateCloudTrailLogSource, 'Yes' ]

  # Condition for CloudWatch log Source
  install_lambda_cloudwatch_logs_source: !Equals [ !Ref Section8aLambdaCreateCloudWatchLogsSource, 'Yes' ]

  # Condition for S3 Logging enable
  auto_enable_s3_logs: !Not [!Equals [ !Ref Section9aAutoEnableS3LogsALBResourcesOptions, 'None' ]]

  # Condition for Auto Subscribe Lambda
  auto_subscribe_exisitng_lambda_log_groups: !Or
    - !Equals [ !Ref Section9cAutoSubscribeLogGroupsLambdaOptions, 'Existing' ]
    - !Equals [ !Ref Section9cAutoSubscribeLogGroupsLambdaOptions, 'Both' ]
  auto_subscribe_new_lambda_log_groups: !Or
    - !Equals [ !Ref Section9cAutoSubscribeLogGroupsLambdaOptions, 'New' ]
    - !Equals [ !Ref Section9cAutoSubscribeLogGroupsLambdaOptions, 'Both' ]
  auto_subscribe_lambda_log_groups: !And
    - !Condition install_lambda_cloudwatch_logs_source
    - !Condition auto_subscribe_new_lambda_log_groups

  # Condition for common
  install_collector: !Or
    - !Condition install_ec2_metadata_source
    - !Condition install_alb_s3_log_source
    - !Condition install_cloudwatch_metrics_source
    - !Condition install_cloudtrail_log_source
    - !Condition install_lambda_cloudwatch_logs_source
  create_bucket: !Or
    - !Condition create_alb_bucket
    - !Condition create_cloudtrail_bucket
  create_trail: !Condition create_cloudtrail_bucket

  # Condition for Stacks creation. Calling Nested Stack EveryTime to create FER and Metric Rule. If already present, marked as duplicate in Resource.
  install_overview_dashboards: !Or
    - !Equals [ !Ref Section3aEC2InstallApp, 'Yes' ]
    - !Equals [ !Ref Section3bALBInstallApp, 'Yes' ]
    - !Equals [ !Ref Section3cDynamoDBInstallApp, 'Yes' ]
    - !Equals [ !Ref Section3dRDSInstallApp, 'Yes' ]
    - !Equals [ !Ref Section3eLambdaInstallApp, 'Yes' ]
    - !Equals [ !Ref Section3fAPIGatewayInstallApp, 'Yes' ]
    - !Equals [ !Ref Section3gAnomalyInstallApp, 'Yes' ]

Mappings:
  RegionMap:
    us-east-1:
      bucketname: appdevzipfiles-us-east-1
    us-east-2:
      bucketname: appdevzipfiles-us-east-2
    us-west-1:
      bucketname: appdevzipfiles-us-west-1
    us-west-2:
      bucketname: appdevzipfiles-us-west-2
    ap-south-1:
      bucketname: appdevzipfiles-ap-south-1
    ap-northeast-2:
      bucketname: appdevzipfiles-ap-northeast-2
    ap-southeast-1:
      bucketname: appdevzipfiles-ap-southeast-1
    ap-southeast-2:
      bucketname: appdevzipfiles-ap-southeast-2
    ap-northeast-1:
      bucketname: appdevzipfiles-ap-northeast-1
    ca-central-1:
      bucketname: appdevzipfiles-ca-central-1
    eu-central-1:
      bucketname: appdevzipfiles-eu-central-1
    eu-west-1:
      bucketname: appdevzipfiles-eu-west-1
    eu-west-2:
      bucketname: appdevzipfiles-eu-west-2
    eu-west-3:
      bucketname: appdevzipfiles-eu-west-3
    eu-north-1:
      bucketname: appdevzipfiles-eu-north-1s
    sa-east-1:
      bucketname: appdevzipfiles-sa-east-1

Resources:

  WaitHandle:
    Type: "AWS::CloudFormation::WaitConditionHandle"

  ConditionGeneratorFunction:
    Type: AWS::Serverless::Function
    Properties:
      InlineCode: |
        import os
        import cfnresponse

        def handler(event, context):
          values = os.environ['Section2bAWSResourcesList']
          response_value = {}
          if values:
              response_value["tag_alb"] = "Yes" if "alb" in values else "No"
              response_value["tag_ec2"] = "Yes" if "ec2" in values else "No"
              response_value["tag_rds"] = "Yes" if "rds" in values else "No"
              response_value["tag_dynamo"] = "Yes" if "dynamodb" in values else "No"
              response_value["tag_apigateway"] = "Yes" if "apigateway" in values else "No"
              response_value["tag_lambda"] = "Yes" if "lambda" in values else "No"

          cfnresponse.send(event, context, cfnresponse.SUCCESS, response_value, "ConditionCheck")
      Handler: index.handler
      Runtime: python3.6
      Environment:
        Variables:
          Section2bAWSResourcesList: !Ref Section2bAWSResourcesList

  Primerinvoke:
    Type: AWS::CloudFormation::CustomResource
    Version: "1.0"
    Properties:
      ServiceToken: !GetAtt ConditionGeneratorFunction.Arn

  CreateCommonResources:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join
        - ""
        - - "https://"
          - !FindInMap [RegionMap, !Ref 'AWS::Region', bucketname]
          - ".s3.amazonaws.com/sumologic-aws-observability-pre-prod/apps/common/resources.template.yaml"
      Parameters:
        Section1aSumoDeployment: !Ref Section1aSumoLogicDeployment
        Section1bSumoAccessID: !Ref Section1bSumoLogicAccessID
        Section1cSumoAccessKey: !Ref Section1cSumoLogicAccessKey
        Section1dSumoOrganizationId: !Ref Section1dSumoLogicOrganizationId
        Section1eRemoveSumoResourcesOnDeleteStack: !Ref Section1eSumoLogicResourceRemoveOnDeleteStack
        Section2aAccountAlias: !Ref Section2cAccountAlias
        Section3aCreateCollector: !If [install_collector, "Yes", "No"]
        Section3bCollectorName: "aws-observability-collector"
        Section4aCreateCloudWatchMetricsSource: !If [install_cloudwatch_metrics_source, "Yes", "No"]
        Section4bCloudWatchMetricsSourceName: !Sub "${Section2cAccountAlias}-aws-observability-cloudwatch-metrics-${AWS::Region}"
        Section4cNamespaces: !Ref Section5bCloudWatchMetricsNameSpaces
        Section5aCreateCommonBucket: !If [create_bucket, "Yes", "No"]
        Section5bCommonBucketName: !Join
          - ""
          - - "aws-observability-logs-"
            - !Select
              - 0
              - !Split
                - "-"
                - !Select
                  - 2
                  - !Split ["/", !Ref "AWS::StackId"]
        Section5cCreateTrail: !If [create_trail, "Yes", "No"]

  CreateSumoLogicAWSExplorerView:
    Type: Custom::SumoLogicAWSExplorer
    Properties:
      ServiceToken: !GetAtt CreateCommonResources.Outputs.SumoLogicLambdaHelperARN
      RemoveOnDeleteStack: false
      ExplorerName: "AWS Observability"
      MetadataKeys:
        - "account"
        - "region"
        - "namespace"
        - "entity"
      SumoAccessID: !Ref Section1bSumoLogicAccessID
      SumoAccessKey: !Ref Section1cSumoLogicAccessKey
      SumoDeployment: !Ref Section1aSumoLogicDeployment

  sumoOverview:
    Type: Custom::App
    Condition: install_overview_dashboards
    Properties:
      ServiceToken: !GetAtt CreateCommonResources.Outputs.SumoLogicLambdaHelperARN
      Region: !Ref "AWS::Region"
      AppName: "AWS Observability Overview App"
      RemoveOnDeleteStack: !Ref Section1eSumoLogicResourceRemoveOnDeleteStack
      SumoAccessID: !Ref Section1bSumoLogicAccessID
      SumoAccessKey: !Ref Section1cSumoLogicAccessKey
      SumoDeployment: !Ref Section1aSumoLogicDeployment

  sumoEC2MetricsAppStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join
        - ""
        - - "https://"
          - !FindInMap [RegionMap, !Ref 'AWS::Region', bucketname]
          - ".s3.amazonaws.com/sumologic-aws-observability-pre-prod/apps/ec2metrics/ec2_metrics_app.template.yaml"
      Parameters:
        Section1aSumoDeployment: !Ref Section1aSumoLogicDeployment
        Section1bSumoAccessID: !Ref Section1bSumoLogicAccessID
        Section1cSumoAccessKey: !Ref Section1cSumoLogicAccessKey
        Section1dSumoOrganizationId: !Ref Section1dSumoLogicOrganizationId
        Section1eRemoveSumoResourcesOnDeleteStack: !Ref Section1eSumoLogicResourceRemoveOnDeleteStack
        Section2aTagExistingAWSResources: !If [tag_existing_aws_resources, !GetAtt Primerinvoke.tag_ec2, "No"]
        Section2bAccountAlias: !Ref Section2cAccountAlias
        Section2cFilterExpression: !Ref Section2dTagAWSResourcesFilterExpression
        Section3aInstallApp: !Ref Section3aEC2InstallApp
        Section3bCollectorName: "aws-observability-collector"
        Section4aCreateMetaDataSource: !If [install_ec2_metadata_source, "Yes", "No" ]
        Section4bMetaDataSourceName: !Sub "${Section2cAccountAlias}-aws-observability-ec2-metaData-${AWS::Region}"
        Section5aParentStackName: !GetAtt CreateCommonResources.Outputs.StackName

  ALBWaitHandle:
    DependsOn: sumoEC2MetricsAppStack
    Type: "AWS::CloudFormation::WaitConditionHandle"

  ALBWaitCondition:
    Type: "AWS::CloudFormation::WaitCondition"
    Properties:
      Handle: !Ref ALBWaitHandle
      Timeout: "10"
      Count: 0

  sumoAlbMetricsAppStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: ALBWaitCondition
    Properties:
      TemplateURL: !Join
        - ""
        - - "https://"
          - !FindInMap [RegionMap, !Ref 'AWS::Region', bucketname]
          - ".s3.amazonaws.com/sumologic-aws-observability-pre-prod/apps/alb/alb_app.template.yaml"
      Parameters:
        Section1aSumoDeployment: !Ref Section1aSumoLogicDeployment
        Section1bSumoAccessID: !Ref Section1bSumoLogicAccessID
        Section1cSumoAccessKey: !Ref Section1cSumoLogicAccessKey
        Section1dSumoOrganizationId: !Ref Section1dSumoLogicOrganizationId
        Section1eRemoveSumoResourcesOnDeleteStack: !Ref Section1eSumoLogicResourceRemoveOnDeleteStack
        Section2aTagExistingAWSResources: !If [tag_existing_aws_resources, !GetAtt Primerinvoke.tag_alb, "No"]
        Section2bAccountAlias: !Ref Section2cAccountAlias
        Section2cFilterExpression: !Ref Section2dTagAWSResourcesFilterExpression
        Section3aInstallApp: !Ref Section3bALBInstallApp
        Section4aCloudWatchMetricCollectorName: "aws-observability-collector"
        Section4bCreateCloudWatchMetricsSource: "No"
        Section4cCloudWatchMetricsSourceName: !Sub "${Section2cAccountAlias}-aws-observability-cloudwatch-metrics-${AWS::Region}"
        Section5aCreateS3Bucket: "No"
        Section5bS3LogsBucketName: !If [create_alb_bucket, !GetAtt CreateCommonResources.Outputs.BucketName, !Ref Section6bALBS3LogsBucketName]
        Section5cALBCollectorName: !If [install_alb_s3_log_source, "aws-observability-collector", !Ref Section6eALBS3LogsCollectorName]
        Section5dCreateALBLogSource: !If [install_alb_s3_log_source, "Yes", "No"]
        Section5eS3BucketPathExpression: !If [create_alb_bucket, !Sub "elasticloadbalancing/AWSLogs/${AWS::AccountId}/*/${AWS::Region}/*", !Ref Section6cALBS3BucketPathExpression]
        Section5fALBLogsSourceName: !If [install_alb_s3_log_source, !Sub "${Section2cAccountAlias}-aws-observability-alb-${AWS::Region}", !Ref Section6fALBLogsSourceName]
        Section5gALBLogsSourceCategoryName: !If [install_alb_s3_log_source, "aws/observability/alb/logs", !Ref Section6gALBLogsSourceCategoryName]
        Section6aParentStackName: !GetAtt CreateCommonResources.Outputs.StackName

  DynamoDBWaitHandle:
    DependsOn: sumoAlbMetricsAppStack
    Type: "AWS::CloudFormation::WaitConditionHandle"

  DynamoDBWaitCondition:
    Type: "AWS::CloudFormation::WaitCondition"
    Properties:
      Handle: !Ref DynamoDBWaitHandle
      Timeout: "10"
      Count: 0

  sumoDynamoDBMetricsAppStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: DynamoDBWaitCondition
    Properties:
      TemplateURL: !Join
        - ""
        - - "https://"
          - !FindInMap [RegionMap, !Ref 'AWS::Region', bucketname]
          - ".s3.amazonaws.com/sumologic-aws-observability-pre-prod/apps/dynamodb/dynamodb_app.template.yaml"
      Parameters:
        Section1aSumoDeployment: !Ref Section1aSumoLogicDeployment
        Section1bSumoAccessID: !Ref Section1bSumoLogicAccessID
        Section1cSumoAccessKey: !Ref Section1cSumoLogicAccessKey
        Section1dSumoOrganizationId: !Ref Section1dSumoLogicOrganizationId
        Section1eRemoveSumoResourcesOnDeleteStack: !Ref Section1eSumoLogicResourceRemoveOnDeleteStack
        Section2aTagExistingAWSResources: !If [tag_existing_aws_resources, !GetAtt Primerinvoke.tag_dynamo, "No"]
        Section2bAccountAlias: !Ref Section2cAccountAlias
        Section2cFilterExpression: !Ref Section2dTagAWSResourcesFilterExpression
        Section3aInstallApp: !Ref Section3cDynamoDBInstallApp
        Section4aCloudWatchMetricCollectorName: "aws-observability-collector"
        Section4bCreateCloudWatchMetricsSource: "No"
        Section4cCloudWatchMetricsSourceName: !Sub "${Section2cAccountAlias}-aws-observability-cloudwatch-metrics-${AWS::Region}"
        Section5aCreateCloudTrailBucket: "No"
        Section5bCloudTrailLogsBucketName: !If [create_cloudtrail_bucket, !GetAtt CreateCommonResources.Outputs.BucketName, !Ref Section7bCloudTrailLogsBucketName]
        Section5cCloudTrailCollectorName: ""
        Section5dCreateCloudTrailLogSource: "No"
        Section5eCloudTrailBucketPathExpression: "*"
        Section5fCloudTrailLogsSourceName: ""
        Section5gCloudTrailLogsSourceCategoryName: !If [install_cloudtrail_log_source, "aws/observability/cloudtrail/logs", !Ref Section7gCloudTrailLogsSourceCategoryName]
        Section6aParentStackName: !GetAtt CreateCommonResources.Outputs.StackName

  RDSWaitHandle:
    DependsOn: sumoDynamoDBMetricsAppStack
    Type: "AWS::CloudFormation::WaitConditionHandle"

  RDSWaitCondition:
    Type: "AWS::CloudFormation::WaitCondition"
    Properties:
      Handle: !Ref RDSWaitHandle
      Timeout: "10"
      Count: 0

  sumoRdsMetricsAppStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: RDSWaitCondition
    Properties:
      TemplateURL: !Join
        - ""
        - - "https://"
          - !FindInMap [RegionMap, !Ref 'AWS::Region', bucketname]
          - ".s3.amazonaws.com/sumologic-aws-observability-pre-prod/apps/rds/rds_app.template.yaml"
      Parameters:
        Section1aSumoDeployment: !Ref Section1aSumoLogicDeployment
        Section1bSumoAccessID: !Ref Section1bSumoLogicAccessID
        Section1cSumoAccessKey: !Ref Section1cSumoLogicAccessKey
        Section1dSumoOrganizationId: !Ref Section1dSumoLogicOrganizationId
        Section1eRemoveSumoResourcesOnDeleteStack: !Ref Section1eSumoLogicResourceRemoveOnDeleteStack
        Section2aTagExistingAWSResources: !If [tag_existing_aws_resources, !GetAtt Primerinvoke.tag_rds, "No"]
        Section2bAccountAlias: !Ref Section2cAccountAlias
        Section2cFilterExpression: !Ref Section2dTagAWSResourcesFilterExpression
        Section3aInstallApp: !Ref Section3dRDSInstallApp
        Section4aCloudWatchMetricCollectorName: "aws-observability-collector"
        Section4bCreateCloudWatchMetricsSource: "No"
        Section4cCloudWatchMetricsSourceName: !Sub "${Section2cAccountAlias}-aws-observability-cloudwatch-metrics-${AWS::Region}"
        Section5aCreateCloudTrailBucket: "No"
        Section5bCloudTrailLogsBucketName: !If [create_cloudtrail_bucket, !GetAtt CreateCommonResources.Outputs.BucketName, !Ref Section7bCloudTrailLogsBucketName]
        Section5cCloudTrailCollectorName: ""
        Section5dCreateCloudTrailLogSource: "No"
        Section5eCloudTrailBucketPathExpression: "*"
        Section5fCloudTrailLogsSourceName: ""
        Section5gCloudTrailLogsSourceCategoryName: !If [install_cloudtrail_log_source, "aws/observability/cloudtrail/logs", !Ref Section7gCloudTrailLogsSourceCategoryName]
        Section6aParentStackName: !GetAtt CreateCommonResources.Outputs.StackName

  LambdaWaitHandle:
    DependsOn: sumoRdsMetricsAppStack
    Type: "AWS::CloudFormation::WaitConditionHandle"

  LambdaWaitCondition:
    Type: "AWS::CloudFormation::WaitCondition"
    Properties:
      Handle: !Ref LambdaWaitHandle
      Timeout: "10"
      Count: 0

  sumoLambdaMetricsAppStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: LambdaWaitCondition
    Properties:
      TemplateURL: !Join
        - ""
        - - "https://"
          - !FindInMap [RegionMap, !Ref 'AWS::Region', bucketname]
          - ".s3.amazonaws.com/sumologic-aws-observability-pre-prod/apps/lambda/lambda_app.template.yaml"
      Parameters:
        Section1aSumoDeployment: !Ref Section1aSumoLogicDeployment
        Section1bSumoAccessID: !Ref Section1bSumoLogicAccessID
        Section1cSumoAccessKey: !Ref Section1cSumoLogicAccessKey
        Section1dSumoOrganizationId: !Ref Section1dSumoLogicOrganizationId
        Section1eRemoveSumoResourcesOnDeleteStack: !Ref Section1eSumoLogicResourceRemoveOnDeleteStack
        Section2aTagExistingAWSResources: !If [tag_existing_aws_resources, !GetAtt Primerinvoke.tag_lambda, "No"]
        Section2bAccountAlias: !Ref Section2cAccountAlias
        Section2cFilterExpression: !Ref Section2dTagAWSResourcesFilterExpression
        Section3aInstallApp: !Ref Section3eLambdaInstallApp
        Section4aCloudWatchMetricCollectorName: "aws-observability-collector"
        Section4bCreateCloudWatchMetricsSource: "No"
        Section4cCloudWatchMetricsSourceName: !Sub "${Section2cAccountAlias}-aws-observability-cloudwatch-metrics-${AWS::Region}"
        Section5aCreateCloudTrailBucket: "No"
        Section5bCloudTrailLogsBucketName: !If [create_cloudtrail_bucket, !GetAtt CreateCommonResources.Outputs.BucketName, !Ref Section7bCloudTrailLogsBucketName]
        Section5cCloudTrailCollectorName: !If [install_cloudtrail_log_source, "aws-observability-collector", !Ref Section7eCloudTrailCollectorName]
        Section5dCreateCloudTrailLogSource: !If [install_cloudtrail_log_source, "Yes", "No"]
        Section5eCloudTrailBucketPathExpression: !If [create_cloudtrail_bucket, !Sub "AWSLogs/${AWS::AccountId}/CloudTrail/${AWS::Region}/*", !Ref Section7cCloudTrailBucketPathExpression]
        Section5fCloudTrailLogsSourceName: !If [install_cloudtrail_log_source, !Sub "${Section2cAccountAlias}-aws-observability-cloudtrail-${AWS::Region}", !Ref Section7fCloudTrailLogsSourceName]
        Section5gCloudTrailLogsSourceCategoryName: !If [install_cloudtrail_log_source, "aws/observability/cloudtrail/logs", !Ref Section7gCloudTrailLogsSourceCategoryName]
        Section6aCloudWatchLogsCollectorName: !If [install_lambda_cloudwatch_logs_source, "aws-observability-collector", !Ref Section8bLambdaCloudWatchLogsCollectorName]
        Section6bCreateCloudWatchLogSource: !If [install_lambda_cloudwatch_logs_source, "Yes", "No"]
        Section6cCloudWatchLogsSourceName: !If [install_lambda_cloudwatch_logs_source, !Sub "${Section2cAccountAlias}-aws-observability-cloudwatch-logs-${AWS::Region}", !Ref Section8cLambdaCloudWatchLogsSourceName]
        Section6dCloudWatchLogsSourceCategoryName: !If [install_lambda_cloudwatch_logs_source, "aws/observability/cloudwatch/logs", !Ref Section8dLambdaCloudWatchLogsSourceCategoryName]
        Section7aParentStackName: !GetAtt CreateCommonResources.Outputs.StackName

  ApiWaitHandle:
    DependsOn: sumoLambdaMetricsAppStack
    Type: "AWS::CloudFormation::WaitConditionHandle"

  ApiWaitCondition:
    Type: "AWS::CloudFormation::WaitCondition"
    Properties:
      Handle: !Ref ApiWaitHandle
      Timeout: "10"
      Count: 0

  sumoApiGatewayMetricsAppStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: ApiWaitCondition
    Properties:
      TemplateURL: !Join
        - ""
        - - "https://"
          - !FindInMap [RegionMap, !Ref 'AWS::Region', bucketname]
          - ".s3.amazonaws.com/sumologic-aws-observability-pre-prod/apps/apigateway/api_gateway_app.template.yaml"
      Parameters:
        Section1aSumoDeployment: !Ref Section1aSumoLogicDeployment
        Section1bSumoAccessID: !Ref Section1bSumoLogicAccessID
        Section1cSumoAccessKey: !Ref Section1cSumoLogicAccessKey
        Section1dSumoOrganizationId: !Ref Section1dSumoLogicOrganizationId
        Section1eRemoveSumoResourcesOnDeleteStack: !Ref Section1eSumoLogicResourceRemoveOnDeleteStack
        Section2aTagExistingAWSResources: !If [tag_existing_aws_resources, !GetAtt Primerinvoke.tag_apigateway, "No"]
        Section2bAccountAlias: !Ref Section2cAccountAlias
        Section2cFilterExpression: !Ref Section2dTagAWSResourcesFilterExpression
        Section3aInstallApp: !Ref Section3fAPIGatewayInstallApp
        Section4aCloudWatchMetricCollectorName: "aws-observability-collector"
        Section4bCreateCloudWatchMetricsSource: "No"
        Section4cCloudWatchMetricsSourceName: !Sub "${Section2cAccountAlias}-aws-observability-cloudwatch-metrics-${AWS::Region}"
        Section5aCreateCloudTrailBucket: "No"
        Section5bCloudTrailLogsBucketName: !If [create_cloudtrail_bucket, !GetAtt CreateCommonResources.Outputs.BucketName, !Ref Section7bCloudTrailLogsBucketName]
        Section5cCloudTrailCollectorName: ""
        Section5dCreateCloudTrailLogSource: "No"
        Section5eCloudTrailBucketPathExpression: "*"
        Section5fCloudTrailLogsSourceName: ""
        Section5gCloudTrailLogsSourceCategoryName: !If [install_cloudtrail_log_source, "aws/observability/cloudtrail/logs", !Ref Section7gCloudTrailLogsSourceCategoryName]
        Section6aParentStackName: !GetAtt CreateCommonResources.Outputs.StackName

  AnamolyWaitHandle:
    DependsOn: sumoApiGatewayMetricsAppStack
    Type: "AWS::CloudFormation::WaitConditionHandle"

  AnamolyWaitCondition:
    Type: "AWS::CloudFormation::WaitCondition"
    Properties:
      Handle: !Ref AnamolyWaitHandle
      Timeout: "10"
      Count: 0

  AnamolyAppStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: AnamolyWaitCondition
    Condition: install_anomaly_detection
    Properties:
      TemplateURL: !Join
        - ""
        - - "https://"
          - !FindInMap [RegionMap, !Ref 'AWS::Region', bucketname]
          - ".s3.amazonaws.com/sumologic-aws-observability-pre-prod/apps/tsat/tsat.template.yaml"
      Parameters:
        Section1aSumoDeployment: !Ref Section1aSumoLogicDeployment
        Section1bSumoAccessID: !Ref Section1bSumoLogicAccessID
        Section1cSumoAccessKey: !Ref Section1cSumoLogicAccessKey
        Section1dSumoOrganizationId: !Ref Section1dSumoLogicOrganizationId
        Section1eRemoveSumoResourcesOnDeleteStack: !Ref Section1eSumoLogicResourceRemoveOnDeleteStack
        Section2aInstallApp: !Ref Section3gAnomalyInstallApp
        Section2bCollectorName: "aws-observability-collector"
        Section3aCreateAwsInventorySource: !If [install_inventory_source, "Yes", "No" ]
        Section3bAwsInventorySourceName: !Sub "${Section2cAccountAlias}-aws-observability-inventory-${AWS::Region}"
        Section3cNamespaces: !Ref Section5dAnomalyInventoryNameSpaces
        Section4aParentStackName: !GetAtt CreateCommonResources.Outputs.StackName

  AutoEnableTaggingNewAWSResources:
    Type: AWS::CloudFormation::Stack
    Condition: tag_new_aws_resources
    Properties:
      TemplateURL: !Join
        - ""
        - - "https://"
          - !FindInMap [RegionMap, !Ref 'AWS::Region', bucketname]
          - ".s3.amazonaws.com/sumologic-aws-observability-pre-prod/apps/AutoTagAWSResources/auto_tag_resources.template.yaml"
      Parameters:
        AccountAlias: !Ref Section2cAccountAlias
        AddTagsForALBResources: !If [tag_new_aws_resources, !GetAtt Primerinvoke.tag_alb, "No"]
        AddTagsForAPIGatewayResources: !If [tag_new_aws_resources, !GetAtt Primerinvoke.tag_apigateway, "No"]
        AddTagsForRDSResources: !If [tag_new_aws_resources, !GetAtt Primerinvoke.tag_rds, "No"]
        AddTagsForEC2MetricsResources: !If [tag_new_aws_resources, !GetAtt Primerinvoke.tag_ec2, "No"]
        AddTagsForLambdaResources: !If [tag_new_aws_resources, !GetAtt Primerinvoke.tag_lambda, "No"]
        AddTagsForDynamoDBResources: !If [tag_new_aws_resources, !GetAtt Primerinvoke.tag_dynamo, "No"]
        FilterExpression: !Ref Section2dTagAWSResourcesFilterExpression

  AutoEnableS3LogsAlbAWSResources:
    Type: AWS::CloudFormation::Stack
    Condition: auto_enable_s3_logs
    DependsOn: sumoApiGatewayMetricsAppStack
    Properties:
      TemplateURL: !Join
        - ""
        - - "https://"
          - !FindInMap [RegionMap, !Ref 'AWS::Region', bucketname]
          - ".s3.amazonaws.com/sumologic-aws-observability-pre-prod/apps/AutoEnableS3LogsAlb/auto_enable_s3_alb.template.yaml"
      Parameters:
        BucketName: !If [create_alb_bucket, !GetAtt CreateCommonResources.Outputs.BucketName, !Ref Section6bALBS3LogsBucketName]
        BucketPrefix: "elasticloadbalancing"
        EnableLogging: "ALB"
        TaggingResourceOptions: !Ref Section9aAutoEnableS3LogsALBResourcesOptions
        FilterExpression: !Ref Section9bAutoEnableS3LogsFilterExpression
        RemoveOnDeleteStack: !Ref Section1eSumoLogicResourceRemoveOnDeleteStack
        ParentStackName: !GetAtt CreateCommonResources.Outputs.StackName

  AutoEnableLambdaLogsWaitHandle:
    Condition: auto_enable_s3_logs
    DependsOn: AutoEnableS3LogsAlbAWSResources
    Type: "AWS::CloudFormation::WaitConditionHandle"

  AutoEnableLambdaLogsWaitCondition:
    Type: "AWS::CloudFormation::WaitCondition"
    Properties:
      Handle: !If [auto_enable_s3_logs, !Ref AutoEnableLambdaLogsWaitHandle, !Ref WaitHandle]
      Timeout: "5"
      Count: 0

  AutoSubscribeLambdaLogGroupsAWSResources:
    Type: AWS::Serverless::Application
    Condition: auto_subscribe_lambda_log_groups
    DependsOn: AutoEnableLambdaLogsWaitCondition
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:956882708938:applications/sumologic-loggroup-connector
        SemanticVersion: 1.0.2
      Parameters:
        LambdaARN: !GetAtt sumoLambdaMetricsAppStack.Outputs.CloudWatchLambdaARN
        LogGroupPattern: !Ref Section9dAutoSubscribeLambdaLogGroupPattern
        UseExistingLogs: !If [auto_subscribe_exisitng_lambda_log_groups, "true", "false"]